cwe,name,description,resolution,exploitation,references
,Metadatos,"250+ Archivos conteniendo metadatos: usuarios, carpetas, fechas de edición y modificación, software usado, dirección de impresoras locales.
","Datos privados son revelados a través de los metadatos de documentos hosteados en el dominio (PDF, WORD). Datos como nombres de usuario, versiones de sistemas operativos, versiones de software utilizados, fechas y horas de cada modificación del documento, direcciones de red de impresoras, etc. Se recomienda limpiar de metadatos documentos que luego serán publicados en internet.",unclassified,
,Session Cookie without Secure flag set,"La cookie no tiene la marca de ""Secure"". Esto instruye al navegador que dicha cookie puede ser solo accedida por canales SSL.
",Si es posible se debería habilitar el flag Secure para esta cookie.,low,
,Session Cookie without HttpOnly flag Set,"La cookie de sesion no esta marcada como HTTPOnly, cuando una cookie es marcada de esta manera da instruccion al navegador que esa cookie puede ser accedida solamente por el servdor y no por script del lado del cliente. Es una importante proteccion de seguridad para las cookies de sesion
",Si es posible se debería habilitar la flag HTTPOnly para esta cookie.,low,
,Apache httpd Remote Denial of Service,"* Alerta generada por el flag del servidor: ver: 2.2.15 *
Se ha detectado un problema en las versiones de apache 1.3.0, 2.0.x hasta 2.0.64 y 2.2.X hasta 2.2.19 que mediante una herramienta automatizada un atacante usando una moderada cantidad de requests puede causar un uso significativo de memoria y CPU en el servidor. Datos: http://seclists.org/fulldisclosure/2011/Aug/175.
",Actualizar versión de Apache,medium,
,Robots.txt,"Robots.txt revela directorios sensibles. Un atacante busca directamente robots.txt para encontrar puntos desde donde comenzar su ataque.
","Es conveniente manejar nombres de directorios que no describan el contenido, en especial en directorios sensibles. Por ejemplo en lugar de /setup o /app_data llamar al directorio /Dir_Code1. De esta manera no revelar a un atacante que clase de información contiene un directorio, que se intenta ocultar de los buscadores (mediante robots.txt).
Otra practica que se me ocurre es la utilización de parámetros. Por ejemplo:
Disallow: /*AB/$
Esto desactivará cualquier carpeta que termine con ""AB"", por ejemplo: /sourceAB/. Evitando pasar cualquier dato a un atacante y centralizando las carpetas sensibles y ocultándolas simplemente colocando ""AB"" al final.",informational,
,Credenciales en Texto Plano,"Las credenciales de usuario son trasmitidas por un canal sin cifrar y pueden ser interceptadas.
",Es altamente recomendable que las páginas de login se fuerzen a usar SSL (https).,medium,
,Parametro __VIEWSTATE sin encriptar,"El parámetro ""__VIEWSTATE"" no esta encriptado. Para reducir las posibilidades de que alguien intercepte información guardada en ViewState, es bueno encriptarlo.
","Se recomienda encriptar el parámetro ""__VIEWSTATE"", para hacer esto se debe setear el tipo de validación a 3DES. Editar Web.Config y agregar la siguiente línea bajo <system.web>
<machineKey validation=""3DES""/>",unclassified,
,Insecure Captcha,"La resolucion del Captcha esta incluida en el mismo codigo:

<img id=""ctl01_mainContent_imgCaptcha"" src=""http://test-www.bancofalabella.com.co/Data/Sites/1/ImgTemp/ImageFormat_THHvB.png""
style=""border-width:0px;"" />

Siendo la respuesta THHvB

Facilitando la manera de automatizar un script para atacar el form.
",Se recomienda implementar un sistema de Captcha que la resolución no se incluya en el código.,unclassified,
,"Mensaje de error de la aplicación
(Application error message)","El server responde con mensajes de error internos que no deberían mostrarse, facilitando de esta manera información que puede ser sensible o útil para un atacante. Pudiendo de esta manera obtener datos para mejorar su vector de ataque.
","Se recomienda deshabilitar los mensajes de error, para no proporcionar información de la tecnología o software implementado.

",low,
,Apache httpOnly Cookie Disclosure,"El servidor Apache desde la versión 2.2.X hasta la 2.2.21 no restringe correctamente la información mostrada en la construcción del error "" Bad Request "" (aka 400) permitiendo a un atacante obtener los parámetros de HTTPOnly.
Datos: http://fd.the-wildcat.de/apache_e36a9cf46c.php
",Actualizar el Apache. La versión 2.2.22 es la primera versión que soluciona este problema.,medium,
,Input de Contraseña con Autocompletar,"Un form de login con autocompletar sugiere un problema de seguridad, sobretodo para los usuarios que utilizan el servicio desde computadoras públicas.
","Se recomienta establecer el input con Autocomplete OFF:
<INPUT TYPE=""password"" AUTOCOMPLETE=""off"">",low,
,Archivos de Backup,"Los archivos de Backup pueden contener código fuente de script, archivos de configuración u otra información sensible que puede ayudar a un atacante a conocer el servidor y preparar ataques más avanzados o específicos.
","Remover el/los archivo(s) si no son requeridos en el servidor en producción. Como un paso adicional, es recomendado implementar una política de seguridad para no permitir la creación de archivos de Backup en directorios accesibles desde la web.",unclassified,
,Possible sensitive directories,"Un posible directorio sensible fue encontrado. Este directorio no esta directamente linkeado en el servidor Web. Se chequeó usando nombres comunes para directorios de configuración, backups, bajadas de bases de datos, páginas de administración, archivos temporales, etc. Usar nombres comunes de directorios para almacenar este tipo de información facilita a usuarios maliciosos buscar archivos sensibles.
","Se recomienda llamar a estos directorios de manera no estándar, por ejemplo:
config-->c0nfig05
backup-->b4ccup
Aunque es aun más recomendable, de ser posible, no dejar directorios de backup, configuración, etc, accesibles directamente desde la web.",unclassified,
,Slow HTTP Denial of Service Attack,"Los ataques conocidos como ""Slowloris"" y ""Slow HTTP POST DoS"" se basan en el hecho de que el protocolo HTTP, por diseño, requiere que las consultas esten completamente recividas por el servidor antes de poder ser procesadas. Si la consulta HTTP no esta completa, o si la tranferencia es muy lenta, el servidor mantiene recursos ocupados esperando el resto de la informacion. Si el servidor mantiene demasiados recursos ocupados, esto crea una denegacion de servicio.
",Es importante establecer los tiempos de espera del servidor. Se adjunta link de recomendacion para evitar este tipo de ataques: https://community.qualys.com/blogs/securitylabs/2011/11/02/how-to-protect-against-slow-http-attacks,medium,
,Clickjacking,"No se encuentra ningún tipo de impedimento para evitar que la web sea embebida dentro de un iframe. Esta restricción es importante ya que un atacante podría engañar a un usuario autenticado a realizar operaciones mediante un engaño llamado Clickjacking donde a la víctima se le presenta una web, posiblemente con algún juego, y utilizando algunos engaños de interfaz la víctima podria ser engañada para aprobar una venta. Ref:http://javascript.info/tutorial/clickjacking
","Todos los browsers modernos son capaces de interpretar los valores seteados en X-Frame-Options, si los mismos son incluidos en el Header del servidor.",low,
,"XSS Cross Site Scripting
(Secuencias de comandos en sitios cruzados)","Es posible inyectar tags de html y código javascript malicioso, por una falta en la comprobación de los datos ingresados en los parámetros. De esta forma, un atacante podría ejecutar código que le permita obtener las cookies del usuario atacado, y de esa forma, tomar control de su cuenta.
","Recomendamos filtrar todos los parámetros en búsqueda de posibles inyecciones, y escapar todos los datos de entrada que se vayan a mostrar en la respuesta.",high,
,SSL 2.0 Obsolete Protocol,"El servicio remoto encripta el tráfico utilizando una versión obsoleta del protocolo SSL con errores y debilidades conocidas. Un atacante puede explotar estas vulnerabilidades y conducir a un ataque de ""man in the middle"" o desencriptar la comunicaciones entre el servicio afectado y los clientes.
",Se recomienda desactivar SSL 2.0 y usar SSL 3.0 o TLS 1.0 en su lugar.,high,
,Metodo OPTIONS activado,"El metodo HTTP OPTIONS está activado en el servidor. El metodo OPTIONS provee una lista de los métodos que son soportados por el servidor web. El método OPTIONS puede exponer información sensible que puede ayudar a un usuario malicioso a preparar ataques más avanzados.
",Es recomendado desactivar el método OPTIONS en un servidor en producción.,low,
,TLS1/SSLv3 Renegotiation Vulnerability,"Una vulnerabilidad, en la manera que los protocolos SSL y TLS aceptan pedidos de renegociaciones, puede permitir a un atacante inyectar texto plano en un flujo de protocolo de aplicación. Esto puede resultar en una situación donde el atacante puede enviar comandos al servidor que parecieran venir desde una fuente legítima. Este problema afecta la versión 3.0 (y más nuevas) de SSL y la versión 1.0 (y más nuevas) de TLS.
Un atacante remoto y sin estar autenticado puede inyectar una cantidad arbitraria de textos planos al comienzo del flujo de protocolo de aplicación. Esto permitiría al atacante enviar requests de HTTP o hacerse pasar por un usuario, entre otras consecuencias.
",http://www.g-sec.lu/practicaltls.pdf,unclassified,
,File Inclusion,"Es posible que un atacante remoto incluya un archivo de recursos locales o remotos y / o la ejecución de código de script arbitrario con los privilegios del servidor web.
","Editar el código fuente para asegurarse de que la entrada esté correctamente validada. Cuando es posible, se recomienda hacer una lista de nombres de archivos aceptados y restringir la entrada a la lista.

En PHP, la opción allow_url_fopen normalmente permite a un programador para abrir, incluir o utilizan de alguna manera un archivo remoto a través de una URL en lugar de una ruta de archivo local. Se recomienda desactivar esta opción de php.ini.",unclassified,
CWE-319,Credenciales enviadas por un canal en texto plano,"Las credenciales de usuario se transmiten sobre un canal sin cifrar. Esta información siempre debe ser transferida a través de un canal cifrado (HTTPS) para evitar ser interceptados por usuarios maliciosos.

Una tercera persona puede ser capaz de leer las credenciales de usuario mediante la interceptación de una conexión no cifrada de HTTP.
","Debido que las credenciales del usuario son considerados información confidencial, siempre debe ser transferido al servidor a través de una conexión segura (HTTPS).",medium,
,URL Redirection,"Este script es vulnerable a los ataques de redirección por URL

La redirección por URL es comúnmente usado para phishing y suplantación de identidad, ya que confunde al usuario a que sitio está ingresando realmente. Un atacante puede redireccionar una visita desde un sitio válido hasta un servidor preparado por el, para poder hacer ataques como por ejemplo de phishing o distribución de malware.
","El script debe filtrar los sitios destinos del redirect, manteniéndolo siempre dentro de los dominios válidos.",unclassified,
,Apache Server Status Enabled,"Server Status es una opción de debug que muestra información sensible del servidor, como número de peticiones, url de las peticiones, uso de memoria, threads, etc.
","Es recomendable desactivar esta opción en servidores en producción, o de ser necesaria la utilización de la misma, securizar la carpeta con contraseña o renombrarla para que no sea de fácil ubicación.",unclassified,
,Microsoft IIS tilde directory enumeration,"Es posible detectar nombres cortos de archivos y directorios cuyo nombrado sea en formato 8.3 en Windows usando vectores en varias versiones de Microsoft IIS. Por ejemplo, es posible detectar todos los nombres cortos de los archivos “.aspx” ya que tienen 4 letras en las extensiones. Esto puede ser un problema mayor, especialmente para los sitios web .Net los cuales son vulnerables al acceso directo a la URL ya que un atacante puede encontrar archivos y carpetas importantes que normalmente no están visibles.
",Hay una manera de deshabilitar la creación del nombre corto de Windows 8.3. Puede crear una clave de registro llamada NtfsDisable8dot3NameCreation en HKLMSYSTEMCurrentControlSetControlFileSystem y establecerlo en 1. Eso debería deshabilitar la creación de nombres cortos. Consulte este artículo de Microsoft TechNet para leer más sobre la solución.,unclassified,
,SQL Injection,"Debido al incorrecto filtrado de parámetros es posible ejecutar comandos SQL en la base de datos situada en el servidor mediante manipulación de parámetros. Un atacante podría utilizar esta técnica para extraer/modificar/eliminar el contenido de la base de datos, el único limitante son los privilegios del usuario utilizado por la aplicación web aunque en muchos casos es posible, gracias a una inyección de SQL, catapultar un acceso al sistema operativo.
","Se debe modificar la aplicación para filtrar caracteres en los campos de input antes de ser enviados como consulta al servidor de base de datos.
Es importante que se sigan buenas prácticas de programación, en todos los sitios desarrollados, y sobre todos los parámetros, y no solo sobre aquellos que sean vulnerables actualmente.
Guía de cómo evitar estos ataques (en inglés): https://www.owasp.org/index.php/Guide_to_SQL_Injection",high,
,ASP.NET debugging enabled,"El modo depuración de ASP.NET está activado en el servidor. Es recomendado desactivar este modo en servidores en producción. Por defecto, en la instalación de IIS este modo está desactivado, si fue activado para diagnosticar errores es conveniente luego desactivarlo.
","Es posible que el modo debug muestre datos sensibles del servidor.
Más información de como desactivar el modo debug:
http://support.microsoft.com/default.aspx?scid=kb;es-us;815157",unclassified,
,Unicode transformation Issues,"La página es vulnerable a varias transformaciones de Unicode como ""Best-Fit Mappings"", ""Overlong byte sequences"" y ""Ill-formed sequences"".

“Best-Fit Mappings” ocurre cuando el caracter X es transformado por un caracter Y totalmente diferente. En general, best-fit mappings occure cuando el caracter es transcodeado entre Unicode y otro encodificado.

""Overlong byte sequences"" (no la forma corta) -  UTF-8 permite diferentes representaciones de caracteres que también tienen una forma más corta. Por razones de seguridad, un decodificador UTF-8 no debe aceptar secuencias UTF-8 que sean más largas de lo necesario para codificar un carácter. Por ejemplo, el carácter U + 000A (salto de línea) debe aceptarse desde un flujo UTF-8 solo en la forma 0x0A, pero no en ninguna de las siguientes cinco posibles formas prolongadas:
0xC0 0x8A
0xE0 0x80 0x8A
0xF0 0x80 0x80 0x8A
0xF8 0x80 0x80 0x80 0x8A
0xFC 0x80 0x80 0x80 0x80 0x8A

“Ill-Formed Subsequences” Como lo REQUIERE UNICODE 3.0, y se indica en el Informe Técnico Unicode # 36, si un byte inicial es seguido por un byte sucesor no válido, entonces NO debe consumirlo.


Las vulnerabilidades del software surgen cuando se producen las asignaciones Best-Fit. Por ejemplo, los caracteres se pueden manipular para omitir los filtros de manejo de cadenas, como los scripts entre sitios (XSS) o los filtros de inyección SQL, los dispositivos WAF y los dispositivos IDS. Podría abusarse de una secuencia UTF-8 excesiva para omitir las pruebas de subcadenas UTF-8 que buscan solo la codificación más corta posible.","Se debe identificar el origen de esta tranformación Unicode y reparar el problema. Se deja links a páginas con información:

http://www.blackhat.com/presentations/bh-usa-09/WEBER/BHUSA09-Weber-UnicodeSecurityPreview-PAPER.pdf
http://www.cl.cam.ac.uk/~mgk25/unicode.html
http://sirdarckcat.blogspot.ro/2009/10/couple-of-unicode-issues-on-php-and.html
http://www.unicode.org/reports/tr36/",unclassified,
,"File Upload XSS
(Subida de archivo de secuencias de comandos de sitios cruzados)","El Script es vulnerable a XSS (Cross-site scripting). La aplicación permite la carga de archivos y se subió un archivo conteniendo lenguaje HTML. Cuando este tipo de archivos es permitido en la carga, luego se pueden ejecutar o linkear, mostrando código o acciones maliciosas en dicha web.

Usuarios maliciosos pueden inyectar: JavaScript, VBScript, ActiveX, HTML o Flash en esta aplicación vulnerable y engañar a un usuario para obtener información de el, tambien se puede robar datos de la sesión, así como las cookies de la misma. Dependiendo del código que se pueda ejecutar, tambien se puede ganar acceso al servidor web, archivos de configuración o hasta ejecución de binarios en el sistema operativo host.
","Se deben restringir los tipos de archivos aceptados en el sistema de Carga: chequear la extensión y solo aceptar ciertos tipos de archivos. Se recomienda una Whitelist en lugar de una Blacklist (es mejor especificar un listado único de extensiones permitidas, sobre un listado de denegadas). También se debe chequear doble extensiones como .php.png. Chequear archivos sin nombre como "".htaccess"" (en ASP.NET, se debe chequear archivos de configuración como web.config). Cambiar los permisos sobre la carpeta upload (de carga) para que los archivos no puedan ser ejecutados ahí. Si es posible, renombre los archivos que son subidos al servidor.
Links con mas información:
https://www.owasp.org/index.php/Unrestricted_File_Upload
https://www.owasp.org/index.php/Testing_for_Stored_Cross_site_scripting_(OWASP-DV-002)",unclassified,
,jQuery cross site scripting,"Esta página esta usando una versión obsoleta de jQuery la cual es vulnerable a Cross Site Scripting. Muchos sitios estan utilizando la selección de elementos usando location.hash lo que permite la ejecución de scripts en la página. El problema fue solucionado en la versión jQuery 1.6.3 o superior.
Usuarios malíciosos pueden inyectar JavaScript, VBScript, ActiveX, HTML o Flash en la aplicación vulnerable, pudiendo asi engañar a un usuario para sacarle información sensible.
","Update to the latest version of jQuery.
More info: 
http://ma.la/jquery_xss/
http://blog.jquery.com/2011/09/01/jquery-1-6-3-released/",unclassified,
,Host Header Attack,"Un atacante puede manipular el header Host y causar que la aplicación se comporte de maneras inesperadas. Los programadores a veces creen en el header host y programan el código basado en el: (_SERVER[""HTTP_HOST""] in PHP). Esto tambien se refleja en portales como Joomla o Wordpress en los plugins y ejecución de script, ejemplos:

 <link href=""http://_SERVER['HOST']"" (Joomla)

...haciendo un apend de keys secretas y tokens:
 <a href=""http://_SERVER['HOST']?token=topsecret""> (Django, Gallery y otros)
....e importante directamente scripts:
 <script src=""http://_SERVER['HOST']/misc/jquery.js?v=1.4.4""> (Various)
","La aplicación web debería usar una variable ""SERVER_NAME"" en lugar de basarse en el Host header.",high,
,Login Page password-guessing attack,"Un problema común con el que se encuentran los programadores web son los ataques de fuerza bruta de logins. Un ataque de fuerza bruta es un intento de adivinar la contraseña por sistemáticamente probar todas las posibles combinaciones de números, letras y símbolos hasta descubrir la combinación correcta. Este ataque se mejora utilizando diccionarios con palabras comunes y combinaciones de las mismas.

Esta página de Login no tiene ninguna protección contra este ataque ya que se probaron 20 logins inválidos y el servidor no bloqueó el acceso para seguir intentando. Tampoco dispone de ninguna protección para evitar los intentos de login automáticos (como un captcha).
","Es recomendable implementar algun tipo de bloqueo de intentos de login tras un número de fallos en los intentos.
Más información:
https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks",unclassified,
,Error page web server version disclosure (Pagina de error mostrando version de servidor ),"Pidiendo una página que no existe, el servidor responde con un error. En esta página de error se encuentran datos que contienen la versión del servidor web y/o módulos activados en este. Dicha información puede ser usada para mejorar las tácticas del atacante sabiendo a que se enfrenta.
",Se debe configurar paginas de error customizadas evitando mostrar esta información.,low,
,Weak SSL,"El servidor está utiizando un cifrado SSL débil.

Weak SSL ciphers (SSL2 on port 443):

SSL2_CK_RC4_128_EXPORT40_WITH_MD5 - Low strength
SSL2_CK_RC2_128_CBC_EXPORT40_WITH_MD5 - Low strength
SSL2_CK_DES_64_CBC_WITH_MD5 - Low strength

Weak SSL ciphers (SSL3 on port 443):

SSL3_CK_RSA_RC4_40_MD5 - Low strength
SSL3_CK_RSA_RC2_40_MD5 - Low strength
SSL3_CK_RSA_DES_40_CBC_SHA - Low strength
SSL3_CK_RSA_DES_64_CBC_SHA - Low strength
SSL3_CK_EDH_RSA_DES_40_CBC_SHA - Low strength
SSL3_CK_EDH_RSA_DES_64_CBC_SHA - Low strength

Weak SSL ciphers (TLS1 on port 443):

TLS1_CK_RSA_EXPORT_WITH_RC4_40_MD5 - Low strength
TLS1_CK_RSA_EXPORT_WITH_RC2_CBC_40_MD5 - Low strength
TLS1_CK_RSA_EXPORT_WITH_DES40_CBC_SHA - Low strength
TLS1_CK_RSA_WITH_DES_CBC_SHA - Low strength
TLS1_CK_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA - Low strength
TLS1_CK_DHE_RSA_WITH_DES_CBC_SHA - Low strength
",Reconfigurar el servidor para un encriptado más fuerte.,unclassified,
,CRIME SSL/TLS attack,"Compression Ratio Info-leak Made Easy (CRIME) es un exploit contra las cookies secretas del servidor sobre conexiones usando protocolos HTTPS y SPDY que también estén usando compresión de datos. Cuando se recupera el contenido de la cookie de autentificación, permite a un atacante robar la sesión, permitiendo iniciar otros ataques.

CRIME es un ataque del lado cliente, pero el servidor puede proteger al cliente rechazando la combinación de estas opciones. Para CRIME, la debilidad es la compresión Deflate.
","CRIME puede ser combatido previniendo el uso de compresión, tanto del lado del cliente, desactivando la compresión de las peticiones HTTPS, o del lado del servidor previniendo el uso de compresión de datos en las transacciones que utilicen el protocolo TLS.

Referencias WEB:
http://blogs.cisco.com/security/breach-crime-and-blackhat/
http://en.wikipedia.org/wiki/CRIME_(security_exploit)
http://isecpartners.com/blog/2012/september/details-on-the-crime-attack.aspx",high,
,Transacción Insegura de HTTPS a HTTP en el form POST,"La página segura (https) contiene un form que realiza el post sobre una página insegura (http). Esto puede confundir al usuario y hacerle creer que su datos son enviados encriptados cuando en realidad no.
",El destino del FORM debe apuntar a una página segura (https).,unclassified,
,Trace Method is Enabled (Método TRACE activado),"El método Trace está habilitado en el servidor. En presencia de otras vulnerabilidades cross-domain en los navegadores web, información sensible del campo header puede ser leída desde cualquier dominio que soporte método HTTP TRACE.

Un atacante podría abusar de la funcionalidad HTTP TRACE para ganar acceso a la información de los headers HTTP como las cookies y datos de autenticación.
","Se recomienda desactivar el método TRACE en el servidor web.

Referencias WEB:
http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html
http://www.cgisecurity.com/lib/WH-WhitePaper_XST_ebook.pdf",low,
,Public Key SSL < 2048 bits (Certificado de llave pública SSL menor de 2048 Bits),"El certificado SSL usado por el servidor contiene una llave pública de menos de 2048 bits de largo.

Los nuevos estándares de la Industria de Certificados para SSL (SSL Certificates Industry) seteados por Certification Authority/Browser (CA/B) Forum requiere que los certificados expedidos después de enero 1 del 2014. Deben ser al menos de 2048-bit largo. Con el incremento del poder de procesamiento de las computadoras, cualquier certificado menor de 2048-bit es riesgoso de ser comprometido por personas mal intencionadas con poder de procesamiento.
","Si se tiene cualquier certificado de 1024-bit o certificados con menos de 2048-bit de largo, será necesario que se migre a 2048-bit.

Nuevo estándar: https://www.cabforum.org/wp-content/uploads/Baseline_Requirements_V1.pdf",unclassified,
,Ruby on Rails CookieStore session cookie persistence,"Ruby on Rails contiene un fallo en su diseño que podría permitir a atacantes facilitar el acceso a las aplicaciones. El problema está en el mecanismo de la CookieStore en guardar la cookie en el lado del cliente, mientras no guarda la entrada correspondiente en el lado del servidor. Cuando la aplicación termina la sesión, Ruby on Rails no tiene manera de trackear esto y verdaderamente invalida la cookie con la configuración por defecto. Esto significa que persiste ""de por vida"" y puede ser usada para acceder a aplicaciones inclusive cuando se piensa que se terminó la sesión.
","Actualmente, no se conocen actualizaciones o parches para corregir esta vulnerabilidad. Si es posible migrar temporalmente implementando un sistema de autenticación más seguro (e.g. ActiveRecordStore).",unclassified,
,Typical Login Web,"Archivo de Login nombrado de manera ""común"".
",Esto facilita a los robots de ataque encontrar páginas sensibles. Se recomienda no usar nombres estándar para páginas de login.,unclassified,
,Credentials in Plain Text,"La página de login viaja sobre texto plano
",Es altamente recomendable que las páginas de login se fuercen a usar SSL (https),medium,
,Unencrypted __VIEWSTATE parameter,"El parámetro ""__VIEWSTATE"" no está encriptado. Para reducir las posibilidades que alguien intercepte información guardada en ViewState es bueno encriptarlo.
","Se recomienda encriptar el parámetro ""__VIEWSTATE"", para hacer esto se debe setear el tipo de validación a 3DES. Editar Web.Config y agregar la siguiente línea bajo <system.web>
<machineKey validation=""3DES""/>",unclassified,
,Credenciales Repetidas,"Existen múltiples credenciales repetidas para un mismo acceso.
Tener credenciales repetidas de un mismo servidor o acceso, posibilita a un atacante tener mayor impacto, pues utilizando un mismo password puede ingresar a distintos servicios o áreas",Evitar utilizar mismas credenciales en distintos servicios.,high,
,FTP Anónimo,"El servicio de FTP posee el usuario : anonymous
Los servidores FTP anónimos ofrecen sus servicios libremente a todos los usuarios, permiten acceder a sus archivos sin necesidad de tener un 'USER ID' o una cuenta de usuario. Es la manera más cómoda fuera del servicio web de permitir que todo el mundo tenga acceso a cierta información sin que para ello el administrador de un sistema tenga que crear una cuenta para cada usuario.

Si un servidor posee servicio 'FTP anonymous' solamente con teclear la palabra «anonymous», cuando pregunte por tu usuario tendrás acceso a ese sistema. No se necesita ninguna contraseña preestablecida, aunque tendrás que introducir una sólo para ese momento, normalmente se suele utilizar la dirección de correo electrónico propia.",Evitar usuario anónimo.,medium,
,Credenciales débiles Tomcat,"Se detectaron credenciales por defecto en servidores Tomcat, ejecutándose con privilegios elevados.
Un atacante que intente loguearse con una lista de usuarios por defecto podría comprometer el servicio.
En este caso en particular el usuario “admin” es muy común en servidores Tomcat, y cuenta con privilegios para ejecutar código, por lo que debe ser protegido con una contraseña fuerte.
",Aplicar una política de seguridad al servidor que obligue el uso de contraseñas de acuerdo con las políticas de seguridad interna.,high,
,Wpad Spoofing,"Los ambientes Windows, ante una falla a resolver un nombre de host,
realizan una segunda búsqueda utilizando NetBios. La naturaleza de este
pedido realizado utilizando broadcast, es inseguro si no se tienen
recaudos.

Un atacante podría utilizar esta vulnerabilidad para
registrar el dominio WPAD en NetBios con el fin de redirigir y modificar
el tráfico de las workstations con las que comparte el segmento de red.
 Este ataque podría derivar en la captura de credenciales o hashes que
le brinden acceso a sistemas críticos.
","Deshabilitar la configuración automática de proxy en los equipos
Windows, y registrar el nombre de dominio WPAD, para que ningún equipo de
 la red pueda impersonarlo.",high,
,Servicio de Telnet,"Las credenciales de usuario se transmiten sobre un canal sin cifrar (servicio Telnet).
Un atacante capaz de interceptar el tráfico entre los hosts y el usuario remoto, será capaz de obtener las credenciales utilizadas.
","Reemplazar los servicios que permiten el envío de credenciales en texto plano, por aquellos que lo hacen de forma cifrada. En este caso, existen diferentes alternativas para reemplazar los servicios de administración remota, como por ejemplo: SSH o RDP.",medium,
,Tokens cacheados,"Fue posible impersonar diferentes usuarios de dominio, incluido un administrador de dominio, a través de los tokens de acceso cacheados en el servidor.
","No existe un parche para resolver este tipo de situaciones, ya que los tokens de acceso son propios de la arquitectura de Windows. Sin embargo es posible implementar algunas medidas a nivel operativo para mitigar en gran parte el impacto del cacheo de tokens. Recomendamos:
> Asegurarse que usuarios con altos privilegios (especialmente administradores) tengan una cuenta específica para tareas de administración y otra para loguearse en sus sistemas.
> Ejecutar aquellas tareas que requieran mayores privilegios utilizando la aplicación “RunAs”.
> Asegurarse que los Domain Admins sólo sean utilizados para administrar el dominio. Crear diferentes cuentas de dominio y asignarle autorización administrativa solo para la unidad de negocio correspondiente.
> Asegurarse que las cuentas administrativas de ambientes de desarrollo y test sean diferentes a las de los sistemas críticos de producción.
> Ejecutar los servicios necesarios para el correcto funcionamiento de la unidad de negocio en un equipo diferente al Controlador de Dominio.
> Utilizar la opción de Active Directory “Account is sensitive and cannot be delegated” (sólo aplica a los logueos interactivos, pero ayuda a reforzar la seguridad de la cuenta).

Referencias:
http://carnal0wnage.attackresearch.com/2008/05/token-passing-with-incognito-part-2.html
http://pentestmonkey.net/uncategorized/from-local-admin-to-domain-admin
http://www.offensive-security.com/metasploit-unleashed/Fun_With_Incognito",high,
,Denegación de Servicios(DOS),"Un ataque de denegación de servicios, también llamado ataque DoS (de las siglas en inglés Denial of Service) o DDoS (de Distributed Denial of Service), es un ataque a un sistema de computadoras o red que causa que un servicio o recurso sea inaccesible a los usuarios legítimos. Normalmente provoca la pérdida de la conectividad de la red por el consumo del ancho de banda de la red de la víctima o sobrecarga de los recursos computacionales del sistema de la víctima
",La forma de prevenirlo: https://www.owasp.org/index.php/Denial_of_Service,high,
,Revelación de Información (Information Disclosure),"Se puede obtener una información sensible del usuario. Esto podría ayudar a un atacante a tener control de una base de datos ó permitirle escalar hacia otro vector de ataque.
","Determinar si esta información debería ser accesible desde la red, sin estar protegida por credenciales.",medium,
,Sitio sin Informar,"
",/reclamaciones/home/index. ,unclassified,
,Listado de Directorios,"Muestra directorios que no deberian ser públicos
",Evitar que dichos directorios sean públicos,medium,
,Shell,"Una shell es parte de código programado en (PHP,Python,Ruby,etc) que una vez que es subido al host victima, puede ser utilizado para subir, bajar, borrar archivos.
","Evitar entradas que posibiliten subir imágenes o código al servidor, sin ser adecuadamente controladas.",unclassified,
,Path Disclosure,"Permite ver la ruta a archivos u aplicaciones que no deberían ser mostradas
","Puede solucionarse desactivando los mensajes de error :
En PHP modificando el archivo php.ini ( display_errors = 'off' )
En Apache modificando el archivo httpd.conf ( php_flag display_errors off)",unclassified,
,File Upload,"Es posible subir código o imágenes sin ser fitradas adecuadamente.
",Evitar campos para subir archivos que no sean correctamente filtrados,unclassified,
,Metodo Put habilitado (Put File Allow),"Sube, carga o realiza un upload de un recurso especificado (archivo), es el camino más eficiente para subir archivos a un servidor.
","Evitar que el metodo PUT se encuentre con libre acceso a cualquier tipo de usuario, restringir acceso.",unclassified,
,Leer Archivos (Read files),"
",,unclassified,
,Usuarios por defecto (default users),"Se debe evitar utilizar usuarios y contraseñas por defecto, pues el sistema puede quedar susceptible a un ataque de fuerza bruta o de diccionario.
",Cambiar usuarios y contraseñas de acuerdo a las políticas de la empresa,unclassified,
,SSLstrip Attack,"Dado que la página no esta utilizando https para proteger sus credenciales, el panel de ingreso está implementado mediante http, y no https, es posible modificar los recursos obtenidos, si el atacante logra intereceptar la comunicación entre ambos sitios.
","Cargar todos los recursos a través de HTTPS, para los recursos externos recomendamos incluir los mismos de la siguiente manera: src=""//dominio.com/recurso.js"" de esta manera el navegador automáticamete incluye el protocolo HTTP o HTTPS segun la conexion inicial que genera.",high,
,Enumerar Usuarios,"
",,medium,
,Login User HTTP,"Las credenciales de usuario y contraseña, viajan en texto plano con lo cual un atacante podría obtener dichas credenciales para un posterior acceso
",Utilizar HTTPS para autenticar usuarios,medium,
,Falta de Control de Acceso,"Se puede acceder a una parte del sitio sin una sesión válida.
",Validar correctamente la sesiones del sitio verificando que el usuario posee una sesión válida,medium,
,Cookie Reutilization,"La cookie puede ser modificada y reutilizada para hacer nuevas consultas o impersonar usuarios.
",Evitar ,medium,
,Credenciales Débiles md5,"Se detecto que dentro del request se envía el nombre de usuario y la contraseña hasheada. Si bien la contraseña utiliza una función de md5, lo hace sin salt para protegerla. Con lo cual un atacante que la intercepte, puede descifrar el md5 para luego obtener la contraseña en texto plano junto con el usuario para acceder al sistema.
","Aplicar una política de seguridad al servidor que obligue el uso de contraseñas de acuerdo con las políticas de seguridad interna.
Se recomienda un cifrado más robusto con la función salt.",high,
,CSRF,"Un ataque CSRF fuerza al navegador web validado de una víctima a enviar una petición a una aplicación web vulnerable, la cual entonces realiza la acción elegida a través de la víctima. Al contrario que en los ataques XSS, los cuales explotan la confianza que un usuario tiene en un sitio en particular, el cross site request forgery explota la confianza que un sitio tiene en un usuario en particular.
","Recomendamos la imprementación de un feature anti-csrf con el fin de autenticar todos los request, en particular aquellas peticiones sensibles, como por ejemplo: el cambio de contraseñas y asignación de roles (dar permisos de administrador a un usuario). El framework de ASP.net cuenta con este feature llamado viewstate (https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet#Viewstate_.28ASP.NET.29)",medium,
,SSL weak ciphers (Cifrado débil),"El servidor remoto soporta el uso de SSL pero ofrece una encriptación débil
",Reconfigurar el servidor web con un nivel de encriptación mayor,medium,
,Token de Session en URL,"Información sensible dentro de las URLs puede ser guardado en distintas lugares, por ejemplo en la información del navegador del usuario, en el webserver, o en cualquier proxy o reverse proxy. Las URLs se pueden ver en las pantallas, pueden ser guardadas como favoritos o pueden ser enviadas entre los usuarios. Esta información puede ser obtenida también como referer, en el histórico de la última página desde donde se ingresa a otra página. Guardar la sesiones en las URLs incrementa que esa información sea capturada por un atacante para luego impersonarse como un usuario válido.
",La aplicación debería utilizar otros mecanismos para el envío de las sessiones como cookies o campos ocultos enviados a traves de métodos de POST ,medium,
,Autenticación sin HTTPS,"La aplicación web no utiliza HTTPS para la autenticación de usuarios al sistema. Las credenciales de usuario y contraseña, viajan en texto plano con lo cual un atacante podría obtener dichas credenciales para un posterior acceso.
",Siempre utilizar HTTPS para autenticar usuarios,high,
,Es-Version Obsoleta / Desactualizada,"El servidor se encuentra utilizando una versión de Apache Tomcat MUY desactualizada (Apache Tomcat/4.1.31), la cual es vulnerable a múltiples vulnerabilidades públicas. Actualmente la ultima versión estable es la 8.0.9
","Recomendación: actualizar y desactivar los mensajes de error del servidor, que puedan brindar información extra a un atacante",medium,
,Número de Tarjeta en Texto Plano,"La respuesta del servidor, contiene el número de tarjeta de crédito y otra información sensible que debería evitarse enviar en texto plano.
",Utilizar HTTPS en todo el sitio en donde la información sensible pueda ser expuesta.,high,
,Server Version Discloure,"El servidor web responde con la versión del sistema facilitando a un atacante saber contra que se enfrenta
","Filtrar en las respuestas del servidor, cualquier dato que muestre la versión del servidor y del sistema operativo del mismo",low,
,Archivo crossdomain.xml inseguro,"El modelo de seguridad del navegador normalmente previene el contenido web de ser accedido desde otro dominio. Esto comunmente es conocido como ""same origin policy"" (""política del mismo origen""). La política de archivos URL garantiza acceso cross-dominio para leer datos. Permiten operaciones que no son permitidas por defecto. La política de acceso de archivo URL esta localizado, por defecto, en el directorio raíz del servidor destino, con el nombre crossdomain.xml (por ejemplo en www.ejemplo.com/crossdomain.xml).

Cuando un dominio es especificado en el archivo crossdomain.xml, el sitio declara que está dispuesto a dar acceso a operadores de cualqueir server en ese dominio para obtener cualquier documento donde la regla reside. El archivo crossdomain.xml desplegado en este servidor web abre el servidor a todos los dominios (uso de un único asterisco ""*"" de comodín es soportado), por ejemplo:
<cross-domain-policy>
<allow-access-from domain=""*"" />
</cross-domain-policy>

Esta práctica es correcta para servidores públicos, pero no debería ser usada en servidores que se encuentran tras un firewall porque puede permitir acceso a áreas protegidas. No debería ser usada para sitios que requieren autenticación en forma de contraseñas o cookies.
","Evaluar detenidamente qué sitios deben tener permitido el acceso cross-dominio. Considerar la topología de red y todos los mecanismos de autenticación afectados por la configuración o implementación de la política cross-domain.
",medium,
,Archivos de backup en servidor de producción,"La aplicación web tiene múltiples archivos de backup disponibles para ser descargados, los cuales brindan información de la tecnología que se utiliza en el sitio, así como código fuente de las aplicaciones, nombres de usuarios, rutas de acceso y múltiple información sensible del mismo.
","Es recomendable aplicar buenas políticas de protección de información sensible, evitando exponer backups y otra información del sitio web",high,
,Exposición de información a través del listado de directorios,"Estos directorios no deberían estar públicos, pues exponen información sensible del tipo de tecnología utilizada, código de programación, información sobre rutas de acceso a distintos lugares, particularmente en este caso podemos listar toda la información del servidor sin ningun tipo de restricción
",Siempre evitar que se puedan listar directorios de manera externa y sin permisos,high,
,Archivos con información sensible,"Es posible acceder a archivos con información sensible, podemos ver el ""log error"" y dentro de este: rutas de acceso, nombres de usuario, etc. Con lo cual un atacante con tiempo podría intentar obtener credenciales de un servicio SSH, FTP, o similar para luego crackearlo.

",Evitar exponer toda información sensible del sistema,high,
,Revelación de IP interno,"La aplicación expone ip/s interno, con lo cual, si por algún vector de ataque un atacante logra acceder al servidor o servicio, podría continuar la explotación por dicho vector
",Evitar exponer toda información sensible y privada del sistema ,low,
,Archivos e información de desarollo en ambientes productivos,"Podemos ver código de programación, con ejemplos concretos del funcionamiento interno y
de la lógica utilizada a la hora de programar, dejando en evidencia
información como nombres de usuarios, email, dni, teléfonos, etc.
",Evitar exponer toda información sensible y privada del sistema,high,
,Sentencias SQL sin Prepared Statement,"Se detectó que se utiliza una mala implementación de sentencias SQL concatenando las variables manualmente pudiendo un atacante realizar ataques de SQL Injection
","Utilizar, para la sentencia de SQL, Prepared Statement.
Referencia:
https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet#Prepared_Statement_Examples",high,
,MySQL: lectura y escritura de archivos,"Es posible utilizar MySQL server para la lectura y escritura de archivos en el servidor
","Seguir los siguientes lineamientos para el hardening de MySQL Server:
https://www.owasp.org/index.php/Testing_for_MySQL#Read_from_a_File",high,
,Servidor productivo y desarrollo,"Por lo que pudimos observar, este servidor sirve tanto para producción como desarrollo, por lo tanto contiene muchísima información y pruebas que deberían ser eliminadas.
","Eliminar el contenido de desarrollo, dejar solo lo necesario para el entorno productivo",high,
,Internal IP Address Disclosure,"Una cadena coincidente con una dirección interna de IPv4 fue encontrada en esta página. Esto lleva a divulgar información sensible acerca del esquema de la red interna. Esta información puede ser usada para generar ataques específicos.
",Se recomienda prevenir que esta información sea mostrada al usuario,low,
,Cisco ASA Error,"El Cisco ASA es vulnerable a un Information Leak (CVE-2014-3392), un atacante podría obtener credenciales en base a un error.
",Actualizar a la última versión del firmware del CISCO ASA,high,
,Listado de directorios,"Evitar listar directorios. Muchas veces a partir de aquí, se pueden realizar distintos vectores de ataques, por claves almacenadas en archivos ocultos o por tener acceso a archivos de configuración.
",Evitar listar directorios. Es recomendable que se deshabiliten o se resguarden con algún tipo de autenticación.,low,
,Privilege Escalation,"Esto sucede cuando un atacante ya ha hecho un reconocimiento y ha comprometido con éxito un sistema al obtener acceso a una cuenta de bajo nivel. En esta fase, un atacante quiere tener un fuerte control sobre el sistema y busca formas de aumentar los privilegios, ya sea para estudiar más el sistema o realizar un ataque.","Cambiar las contraseñas de las cuentas administrativas con regularidad y aplicar una política de contraseñas seguras (por ejemplo, asegurarse de que las cuentas de los administradores locales tengan contraseñas complejas y únicas en todos los sistemas).

Referencia:
https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)
",medium,
,Default Credentials,"Se detectó que el sistema posee credenciales por defecto para acceder a la consola de administración. Estas credenciales pueden ser obtenidas desde sitios de internet, por ejemplo: foros de tecnología, manuales del sistema, entre otros.","Se recomienda cambiar todas las contraseñas por defecto del sistema y adaptarlas a una política de contraseñas seguras. También es recomendable que todas las cuentas por defecto del sistema sean renombradas y sus contraseñas cambiadas.

Referencia:
https://www.owasp.org/index.php/Testing_for_default_credentials_(OTG-AUTHN-002)
",critical,
