"name","description"
"1. Unsigned firmware updates", "Check if the device accepts firmware updates, and if it verifies the authenticity of the binaries. An attacker can easily gain code execution via unsigned firmware updates by uploading a malicious firmware."
"2. Hardcoded credentials", "Usually, firmware can be recovered in some way, either via unencrypted updates or dumping it from flash or RAM. Then it can be disassembled and analyzed for hardcoded debug/admin credentials that can then be used to compromise the device."
"3. Debug ports", "Developers usually leave debug ports in the form of serial consoles or JTAG ports. If unsecured, an attacker with physical access can use those ports to compromise the device, either because they are not authenticated, or using hardcoded credentials."
"4.Outdated/vulnerable software", "Most embedded hardware device's firmware is updated at a slow rate, if at all. An attacker can identify unpatched software versions or libraries that the firmware is using, and exploit the vulnerabilities to gain code execution or dump additional data."
"5. Allowing old firmware updates", "The device should not allow flashing for an older firmware version. An attacker could force flash an older firmware with known vulnerabilities and then use them to gain code execution or privileges. Note that the older firmware might be signed and still be vulnerable."
"6. Weak RNG", "Embedded devices usually do not contain a high-quality random number generator. This weakens most crypto operations, specially if the device generates credentials in some way. An attacker can predict or control the output of the generator, and in this way extract parts or the complete generated keys."
"7. Subsystem trust abuse", "Many embedded devices are composed of multiple CPUs/subsystems connected via different bus types. The subsystems usually trust each other and developers don't expect a malicious or compromised subsystem, and don't validate the communications with them. An attacker with physical access to the device can easily impersonate one or several subsystems and gain code execution or privileges on the other modules."
"8. Lack of brown-out detector", "Embedded CPUs contain circuitry to detect 'brown-outs' or voltage drops. If power is not within accepted range, the CPU usually resets. If this system is not enabled, an attacker could feed invalid voltages to the CPU to force unexpected behavior and control several aspects of the execution. This is known as a glitch attack."
"9. Side-channels", "Embedded devices could be susceptible to leaking critical data via side channels. Some devices processing might be slow so timing attacks are particularly effective. Devices can also leak data via thermal or electromagnetic emissions."
"10. Lack of hardware-based security", "Many low-power devices lack hardware-based security like a MMU or page-level permissions. This prevents developers to properly implement process-separation and other basic security measures. An attacker could leverage this to easily escalate privileges, or greatly reduce the complexity of software exploits."
